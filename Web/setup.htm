<html><head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<script language=javascript>
var srv, dev, tm;
function rl(once) {
 if (!once) {
  if (tm)
   clearTimeout(tm);
  tm = null;
 }
 document.getElementById("rl").disabled = true;
 if (dev)
  xr(dev+"/temperature", function(f,...a) {
   if (this.status == 200 && typeof this.response === "object" && typeof this.response[0] === "string") {
    document.getElementById("t").innerHTML = this.response[0];
    xr(dev+"/VDD", function(f,...a) {
     if (this.status == 200 && typeof this.response === "object" && typeof this.response[0] === "string") {
      document.getElementById("h").innerHTML = Math.round(this.response[0]*100)/10;
      xr(dev+"/VAD", function(f,...a) {
       if (this.status == 200 && typeof this.response === "object" && typeof this.response[0] === "string") {
        document.getElementById("v").innerHTML = Math.round(this.response[0]*100);
        xr(dev+"/pages/page.0", function(f,...a) {
         if (this.status == 200 && typeof this.response === "object" && typeof this.response[0] === "string") {
          document.getElementById("raw").innerHTML = "Page0: "+this.response[0];
          if (!once && document.getElementById("co").checked && !tm)
           tm = setTimeout(rl.bind(null), 250);
          else
           document.getElementById("rl").disabled = false;
         } else f.apply(this,a);
        },f,...a);
       } else f.apply(this,a);
      },f,...a);
     } else f.apply(this,a);
    },f,...a);
   } else f.apply(this,a);
  }, function() {
   document.getElementById("raw").innerHTML = "<font color=red>Following data is not valid, " +
    (this.status ? this.status == 404 ? "Device is offline" :
     "Error "+this.status+" "+this.statusText : "Server read error, check owhttpd") + "</font>";
   if (!once && document.getElementById("co").checked && !tm)
    tm = setTimeout(rl.bind(null), 500);
   else
    document.getElementById("rl").disabled = false;
  });
 else
  xr("", function() {
   var i,h = "";
   if (this.status == 200 && typeof this.response === "object")
    for (i in this.response)
     h += ((i.substr(0,3) == "1E.") ? "<a href=\"#"+srv+"/"+i+"\">"+i+"</a>" : i) + "<br>";
   else
    h = "<font color=red>" + (this.status ?
      "Error "+this.status+" "+this.statusText : "Server read error, check owhttpd") + "</font>";
   document.getElementById("ls").innerHTML = h;
   if (!once && document.getElementById("co").checked && !tm)
    tm = setTimeout(rl.bind(null), 1000);
   else
    document.getElementById("rl").disabled = false;
  });
}
function ga(b,i,p,s) {
 b.disabled = true;
 xr(dev+p, function(f,...a) {
  if (this.status == 200 && typeof this.response === "object" && typeof this.response[0] === "string") {
   xr(dev+"/pages/page.0", function(f,...a) {
    if (this.status == 200 && typeof this.response === "object" && typeof this.response[0] === "string") {
     document.getElementById(i).value = parseInt(this.response[0].substr(12, 2) + this.response[0].substr(10, 2), 16) / s;
     b.disabled = false;
    } else f.apply(this,a);
   },f,...a);
  } else f.apply(this,a);
 }, function() {
  document.getElementById(i).value = "";
  b.disabled = false;
 });
}
function cc() {
 if (!document.getElementById("co").checked && tm) {
  clearTimeout(tm);
  document.getElementById("rl").disabled = false;
 }
}
function ii() {
 var a = location.hash.replace(/^#/,"").split("/");
 srv = a[0]; dev = a[1];
 document.getElementById("cf").hidden = !!srv;
 document.getElementById("wr").hidden = !srv;
 document.getElementById("hd").innerHTML = "<a href=\"#\">/</a> " +
  (dev ? "<a href=\"#"+srv+"\">"+srv+"</a> / " + dev : srv);
 document.getElementById("ls").hidden = !!dev;
 document.getElementById("dv").hidden = !dev;
 if (!!dev) uc("cet");
 if (srv) rl();
}
function ok() {
 location.hash = document.getElementById("srv").value;
}
function ss(n, i) {
 var k,o = document.getElementById(n);
 for (k = 0; o.length > k; k++) o[k].selected = (k == i);
}
function sg(n) {
 var k,o = document.getElementById(n);
 for (k = 0; o.length > k && !o[k].selected; k++);
 return k >= o.length ? 0 : k;
}
function ro(i) {
 return Math.round(i*10000000)/10000000;
}
function si(i,s) {
 return (i&(1<<s))?i-(1<<(s+1)):i;
}
function su(i,s) {
 return 0>i?i+(1<<(s+1)):i
}
function hx(i) {
 return i>0?256>i?(16>i?"0":"")+i.toString(16):"ff":"00";
}
function hs(a,o,n) {
 var s = "";
 for (n += o; n > o; o++) s += hx(a[o]);
 return s;
}
function xr(p,f,...a) {
 var r = new XMLHttpRequest();
 r.onreadystatechange = function() {
  if (this.readyState == 4)
   f.apply(this, a);
 };
 r.responseType = "json";
 r.open("GET", "http://"+srv+"/json/uncached/"+p, true);
 r.send();
}

function ex(c,n) {
 var o = document.getElementById(n);
 if (!(o.hidden = !c.checked) && o.onshow)
  o.onshow.apply(o);
}
function uc(n) {
 var o = document.getElementById(n);
 o.checked = false;
 if (o.onchange)
  o.onchange.apply(o);
}
function ac(i) {
 var o;
 if (!i.value) i.value = 0;
 if ((o = i.parentNode.parentNode.nextElementSibling) && (o = o.cells[i.parentNode.cellIndex].firstChild) && ("value" in o)) {
  o.min = ro(+i.value+1*o.step);
  o.max = ro(+i.value+256*o.step);
 }
 if (i.parentNode.cellIndex == 0) {
  o = i.parentNode.parentNode.parentNode;
  for (i = 3; o.rows.length > i; i++)
   o.rows[i].cells[0].innerHTML = ro(+o.rows[1].cells[0].firstChild.value+(i-1)*(+o.rows[2].cells[0].firstChild.value-o.rows[1].cells[0].firstChild.value));
 }
}
function tr(o) {
 var i;
 for (i = 1; o.rows.length > i; i++) {
  o.rows[i].cells[1].firstChild.value = +o.rows[i].cells[1].firstChild.value;
  ac(o.rows[i].cells[1].firstChild);
 }
 o.rows[1].cells[0].firstChild.value = +o.rows[1].cells[0].firstChild.value;
 o.rows[2].cells[0].firstChild.value = +o.rows[2].cells[0].firstChild.value;
 ac(o.rows[1].cells[0].firstChild);
}
function ep() {
 var i, c, o = document.getElementById('tt');
 c = document.getElementById('ep').checked;
 o.rows[1].cells[0].firstChild.min  = c ? -64      : -128;
 o.rows[1].cells[0].firstChild.max  = c ? 31.9375  : 127.875;
 o.rows[1].cells[0].firstChild.step = c ? 0.0625   : 0.125;
 o.rows[2].cells[0].firstChild.step = c ? 0.015625 : 0.0625;
 o.rows[1].cells[1].firstChild.min = 0;
 o.rows[1].cells[1].firstChild.max = c ? 1023.5 : 1023;
 for (i = 1; o.rows.length > i; i++)
  o.rows[i].cells[1].firstChild.step = c ? 0.5 : 1;
 tr(o);
}
function tf(t,n) {
 var i,r,o = document.getElementById(t);
 while (n+2 > o.rows.length) {
  r = o.insertRow(o.rows.length);
  i = r.insertCell(0);
  i.innerHTML = ro(+o.rows[1].cells[0].firstChild.value+(o.rows.length-2)*(+o.rows[2].cells[0].firstChild.value-o.rows[1].cells[0].firstChild.value));
  i = r.insertCell(1);
  i.innerHTML = o.rows[2].cells[1].innerHTML;
  i.firstChild.value = 0;
 }
 for (i = 1; o.rows.length > i; i++)
  o.rows[i].hidden = i >= n+2;
 o.parentElement.hidden = 0 >= n;
 tr(o);
}
function tc(t,n) {
 var i,r,c,o;
 if (isNaN(n)) n = sg(t?"hc":"vc");
 tf(t?"th":"tv",n);
 for (i = n, c = 0; 2 > c; c++, t = !t, i = sg(t?"hc":"vc")) {
  i = i?49>i?49-i:1:53;
  o = document.getElementById(!t?"hc":"vc");
  while (o.length > i)
   o.removeChild(o.lastChild);
  while (i > o.length) {
   r = document.createElement("option");
   r.text = o.length+1;
   o.appendChild(r);
  }
 }
 ss(t?"hc":"vc",n);
 n = 52;
 if (i = sg("vc")) n -= i+4;
 if (i = sg("hc")) n -= i+4;
 document.getElementById("tc").innerHTML = n>0?n+1:"no";
 tf("tt",n);
 uc("cct");
 uc("cch");
}
function lt() {
 var i,a=["tb","tr","t1","ta1","t2","ta2","hg","hr","h1","ha1"];
 document.getElementById("lt").disabled = true;
 for (i = 0; a.length > i; i++)
  document.getElementById(a[i]).value = document.getElementById(a[i]).placeholder;
 xr(dev+"/pages/page.ALL", function() {
  tc(0,0);
  tc(1,0);
  if (this.status == 200 && typeof this.response === "object" && typeof this.response[0] === "string") {
   var i,n,m,t,o,s = this.response[0];
   document.getElementById("tab").innerHTML = "Pages read successfully";
   for (m = 0; 56 > m; m += n+1) {
    n = parseInt(s.substr(16+m*2, 2), 16);
    t = (n >> 6) & 1;
    if (n & 0x80) {
     //t = 1; //fixme
     i = n;
     n = 55-m;
     if (n > 3) {
      o = document.getElementById("tt");
      document.getElementById('ep').checked = !!t;
      o.rows[1].cells[0].firstChild.value = ro(si(parseInt(s.substr(20+m*2, 2), 16) + ((i & 0x07) << 8), 10) / (t?16:8));
      o.rows[2].cells[0].firstChild.value = ro(+o.rows[1].cells[0].firstChild.value + (parseInt(s.substr(22+m*2, 2), 16) + 1) / (t?64:16));
      o.rows[1].cells[1].firstChild.value = ro((parseInt(s.substr(18+m*2, 2), 16) + ((i & 0x38) << 5)) / (t?2:1));
      for (i = 2; n-1 > i; i++)
       o.rows[i].cells[1].firstChild.value = ro(+o.rows[i-1].cells[1].firstChild.value + (parseInt(s.substr(20+(m+i)*2, 2), 16) + 1) / (t?2:1));
      ep();
     }
    } else {
     if ((n &= 0x3f) > 55-m) n = 55-m;
     if (n > 3) {
      tc(t, n-3);
      o = document.getElementById(t?"th":"tv");
      o.rows[1].cells[0].firstChild.value = ro(si(parseInt(s.substr(20+m*2, 2), 16), 7) / (t?10:1));
      o.rows[2].cells[0].firstChild.value = ro(+o.rows[1].cells[0].firstChild.value + (parseInt(s.substr(22+m*2, 2), 16) + 1) / (t?10:1));
      o.rows[1].cells[1].firstChild.value = parseInt(s.substr(18+m*2, 2), 16);
      for (i = 2; n-1 > i; i++)
       o.rows[i].cells[1].firstChild.value = +o.rows[i-1].cells[1].firstChild.value + parseInt(s.substr(20+(m+i)*2, 2), 16) + 1;
      tr(o);
     }
    }
   }
  } else {
   document.getElementById("tab").innerHTML = "<font color=red>Following data is not valid, " +
    (this.status ? this.status == 404 ? "Device is offline" :
     "Error "+this.status+" "+this.statusText : "Server read error, check owhttpd") + "</font>";
  }
  document.getElementById("lt").disabled = false;
 });
}
function st() {
 var i,n,o,t,a,s="0000000000000000",e="";
 for (t = 1; t >= 0; t--) {
  if (n = sg(t?"hc":"vc")) {
   o = document.getElementById(t?"th":"tv");
   s += hx((++n+2)|(t*64)) + hx(+o.rows[1].cells[1].firstChild.value)
    + hx(su(ro(+o.rows[1].cells[0].firstChild.value)*(t?10:1), 7))
    + hx((ro(+o.rows[2].cells[0].firstChild.value-o.rows[1].cells[0].firstChild.value))*(t?10:1)-1);
   for (i = 2; n >= i; i++)
    s += hx(+o.rows[i].cells[1].firstChild.value-o.rows[i-1].cells[1].firstChild.value-1);
   for (i=n; i>=1; i--) if (!o.rows[i].cells[1].firstChild.validity.valid) e = "row "+i+", col 2"
   for (i=2; i>=1; i--) if (!o.rows[i].cells[0].firstChild.validity.valid) e = "row "+i+", col 1"
  }
  if (e!=="") e = (t?"humidity":"user sensor")+" table, "+e;
 }
 if ((n = 61-s.length/2) > 1) {
  o = document.getElementById("tt");
  t = document.getElementById("ep").checked;
  i = su(ro(+o.rows[1].cells[0].firstChild.value)*(t?16:8),10);
  a = ro(+o.rows[1].cells[1].firstChild.value*(t?2:1));
  s += hx((t?0xc0:0x80)|((a>>5)&0x38)|((i>>8)&0x07))+hx(a&0xff)+hx(i&0xff)+
   hx(ro(+o.rows[2].cells[0].firstChild.value-o.rows[1].cells[0].firstChild.value)*(t?64:16)-1);
  for (i = 2; n >= i; i++)
   s += hx(ro(+o.rows[i].cells[1].firstChild.value-o.rows[i-1].cells[1].firstChild.value)*(t?2:1)-1);
  for (i=n; i>=1; i--) if (!o.rows[i].cells[1].firstChild.validity.valid) e = "row "+i+", col 2"
  for (i=2; i>=1; i--) if (!o.rows[i].cells[0].firstChild.validity.valid) e = "row "+i+", col 1"
  if (e!=="") e = "temperature table, "+e;
 } else {
  s += s.substr(0,128-s.length);
 }
 if (e!=="") {
  document.getElementById("tab").innerHTML = "<font color=red>Error in "+e+"</font>";
 } else {
  document.getElementById("st").disabled = true;
  xr(dev+"/pages/page.ALL?page.ALL="+s, function() {
   if (this.status == 200 && typeof this.response === "object" && typeof this.response[0] === "string") {
    document.getElementById("tab").innerHTML = "Pages written successfully";
   } else {
    document.getElementById("tab").innerHTML = "<font color=red>Write failed, " +
     (this.status ? this.status == 404 ? "Device is offline" :
      "Error "+this.status+" "+this.statusText : "Server read error, check owhttpd") + "</font>";
   }
   document.getElementById("st").disabled = false;
  });
 }
}
function fRt(t) {
 var b = +document.getElementById("tb").value;
 var r = +document.getElementById("tr").value;
 return r*Math.exp(b*(1/(273.15+t)-1/(273.15+25)));
}
function a2R(a) {return 2048/a-1;}
function ADCt(t) {return 2048/(fRt(t)+1);}
function ft() {
 var e,t,s,i,o = document.getElementById("tt");
 e = document.getElementById("ep").checked;
 t = +o.rows[1].cells[0].firstChild.value;
 s = +o.rows[2].cells[0].firstChild.value-t;
 for (i = 1; o.rows.length > i; i++, t += s) {
  o.rows[i].cells[1].firstChild.value = e?Math.round(ADCt(t)*2)/2:Math.round(ADCt(t));
  ac(o.rows[i].cells[1].firstChild);
 }
}
function ct() {
 var t1,t2,r1,r2;
 t1 = +document.getElementById("t1").value;
 t2 = +document.getElementById("t2").value;
 r1 = a2R(+document.getElementById("ta1").value);
 r2 = a2R(+document.getElementById("ta2").value);
 if (t1 != t2 && document.getElementById("t2").value != "")
  document.getElementById("tb").value = Math.round(Math.log(r1/r2)/(1/(t1+273.15)-1/(t2+273.15))*1000)/1000;
 document.getElementById("tr").value = Math.round(r1*Math.exp(+document.getElementById("tb").value*(1/(25+273.15)-1/(t1+273.15)))*1000000)/1000000;
}
function fRh(h) {
 var x = (h-60)/100;
 return Math.exp(0.195735100980557*x*x*x + 7.22508961764974*x*x - 10.046505931211*x);
}
function ADCh(h,r,g) {
 return 1024/(fRh(h)*r+1) + 1024/(fRh(h)*r/g+1);
}
function fh() {
 var r,g,h,s,i,o = document.getElementById("th");
 r = +document.getElementById("hr").value;
 g = +document.getElementById("hg").value;
 h = +o.rows[1].cells[0].firstChild.value;
 s = +o.rows[2].cells[0].firstChild.value-h;
 for (i = 1; o.rows.length > i; i++, h += s) {
  o.rows[i].cells[1].firstChild.value = Math.round(ADCh(h,r,g));
  ac(o.rows[i].cells[1].firstChild);
 }
}
function ch() {
 var r,g,h,a,s,r0 = 1;
 g = +document.getElementById("hg").value;
 h = +document.getElementById("h1").value;
 a = +document.getElementById("ha1").value;
 for (s = 1; s >= 0.000001; s /= 10)
  for (r = r0; r0+10*s >= r && ADCh(h,r,g) >= a; r0 = r, r += s);
 document.getElementById("hr").value = ro(r0);
}
</script>
</head><body onload="ii()" onhashchange="ii()">
<div id="wr" hidden>
<b id="hd"></b><br>
<input id="rl" type=button value="Reload" onclick="rl()">
<input id="co" type=checkbox onchange="cc()"> continuous<br>
<div id="ls"></div>
<div id="dv" hidden>
<span id="raw"></span><br>
Temperature: <span id="t"></span>&#8451;<br>
Relative Humidity: <span id="h"></span>%<br>
User Sensor Value: <span id="v"></span><br>

<input id="cet" type=checkbox onchange="ex(this,'et')"> edit tables<br>
<div id="et" hidden onshow="lt()">
<input id="lt" type=button value="Load tables" onclick="lt()">
<input id="st" type=button value="Save tables" onclick="st()"><br>
<span id="tab"></span><br>

<b>Temperature table:</b> <span id="tc"></span> points<br>
<div hidden><table id="tt" border=1>
<input id="ep" type=checkbox onchange="ep()"> extended precission<br>
<tr><td>Temperature, &#8451;</td><td>ADC</td></tr>
<tr><td><input type=number value=0 onchange="ac(this)"></td><td><input type=number value=0 onchange="ac(this)"></td></tr>
<tr><td><input type=number value=0 onchange="ac(this)"></td><td><input type=number value=0 onchange="ac(this)"></td></tr>
</table>
<input id="cct" type=checkbox onchange="ex(this,'ct')"> calibrate temperature sensor<br>
<div id="ct" hidden>
<table border=0><tr><td><input type=button value="Fill table" onclick="ft()"></td>
<td>B=<input id="tb" type=number min=2900 max=3800 step=0.001 placeholder=3380></td>
<td>Rt25/R0=<input id="tr" type=number min=0.5 max=2 step=0.000001 placeholder=1></td></tr></table>
<table border=1><tr><td><input type=button value="Calibrate" onclick="ct()"></td><td>Temperature, &#8451;</td><td>ADC</td></tr>
<tr><td>Point #1</td><td><input id="t1" type=number min=-128 max=128 step=0.0001 placeholder=0></td><td><input id="ta1" type=number min=0 max=2048 step=0.0625 placeholder=535.75><input type=button value="Get" onclick="ga(this,'ta1','/temperature',16)"></td></tr>
<tr><td>Point #2</td><td><input id="t2" type=number min=-128 max=128 step=0.0001 placeholder=25></td><td><input id="ta2" type=number min=0 max=2048 step=0.0625 placeholder=1024><input type=button value="Get" onclick="ga(this,'ta2','/temperature',16)"></td></tr>
</table>
</div></div>

<b>Humidity table:</b> <select id="hc" onchange="tc(1)"><option selected>no</select> points<br>
<div hidden><table id="th" border=1>
<tr><td>Humidity, %</td><td>ADC</td></tr>
<tr><td><input type=number value=0 step=0.1 min=-12.8 max=12.7 onchange="ac(this)"></td><td><input type=number value=0 step=1 min=0 max=255 onchange="ac(this)"></td></tr>
<tr><td><input type=number value=0 step=0.1 onchange="ac(this)"></td><td><input type=number value=0 step=1 onchange="ac(this)"></td></tr>
</table>
<input id="cch" type=checkbox onchange="ex(this,'ch')"> calibrate humidity sensor<br>
<div id="ch" hidden>
<table border=0><tr><td><input type=button value="Fill table" onclick="fh()"></td>
<td>RT/Rt=<input id="hg" type=number min=30 max=80 step=0.001 placeholder=47></td>
<td>Rh60/Rt=<input id="hr" type=number min=1 max=10 step=0.000001 placeholder=3.1></td></tr></table>
<table border=1><tr><td><input type=button value="Calibrate" onclick="ch()"></td><td>Humidity, %</td><td>ADC</td></tr>
<tr><td>Point #1</td><td><input id="h1" type=number min=0 max=100 step=0.01 placeholder=75></td><td><input id="ha1" type=number min=0 max=2048 step=0.125 placeholder=1573><input type=button value="Get" onclick="ga(this,'ha1','/VDD',8)"></td></tr>
</table>
</div></div>

<b>User Sensor table:</b> <select id="vc" onchange="tc(0)"><option selected>no</select> points<br>
<div hidden><table id="tv" border=1>
<tr><td>Value</td><td>ADC</td></tr>
<tr><td><input type=number value=0 step=1 min=-128 max=127 onchange="ac(this)"></td><td><input type=number value=0 step=1 min=0 max=255 onchange="ac(this)"></td></tr>
<tr><td><input type=number value=0 step=1 onchange="ac(this)"></td><td><input type=number value=0 step=1 onchange="ac(this)"></td></tr>
</table></div>

</div></div></div>
<div id="cf">
Input owhttpd_address:port <input id="srv" type=text value="127.0.0.1:2121" onkeydown="if(event.keyCode==13)ok()">
<input type=button value="Ok" onclick="ok()"><br><br>
If you have already configured and running <a href="https://owfs.org/">owserver</a>, run owhttpd in this way:
<pre>$ owhttpd -p owhttpd_address:port -s owserver_address:port</pre>
Or run owhttpd as standalone 1-wire bus master in this way:
<pre>$ owhttpd -p owhttpd_address:port --passive /dev/ttyUSB0</pre>
Read <a href="https://owfs.org/uploads/owhttpd.html">owhttpd</a> man page.
</div>
</body></html>
